cyl = factor(cyl)) %>%
group_by(am) %>%
count(cyl) %>%
ggplot(mapping = aes(cyl, y = n, fill = factor(am))) +
geom_col(position = "dodge") +
geom_text(aes(label = n), position = position_dodge(width = 0.7), vjust = -1) +
scale_y_continuous(expand = expand_scale(mult = c(0, 0.1))) +
labs(x = "Cylinders",
y = NULL) +
remove_ticks() +
remove_axis()
library(ggplot2)
mtcars %>%
mutate(am = factor(am, labels = c("Automatic", "Manual")),
cyl = factor(cyl)) %>%
group_by(am) %>%
count(cyl) %>%
ggplot(mapping = aes(cyl, y = n, fill = factor(am))) +
geom_col(position = "dodge") +
geom_text(aes(label = n), position = position_dodge(width = 0.7), vjust = -1) +
scale_y_continuous(expand = expand_scale(mult = c(0, 0.1))) +
labs(x = "Cylinders",
y = NULL) +
remove_ticks() +
remove_axis()
mtcars %>%
mutate(am = factor(am, labels = c("Automatic", "Manual")),
cyl = factor(cyl)) %>%
group_by(am) %>%
count(cyl) %>%
ggplot(mapping = aes(cyl, y = n, fill = factor(am))) +
geom_col(position = "dodge") +
geom_text(aes(label = n), position = position_dodge(width = 0.7), vjust = -1) +
scale_y_continuous(expand = expand_scale(mult = c(0, 0.1))) +
labs(x = "Cylinders",
y = NULL) +
remove_axis()
mtcars %>%
mutate(am = factor(am, labels = c("Automatic", "Manual")),
cyl = factor(cyl)) %>%
group_by(am) %>%
count(cyl) %>%
ggplot(mapping = aes(cyl, y = n, fill = factor(am))) +
geom_col(position = "dodge") +
geom_text(aes(label = n), position = position_dodge(width = 0.7), vjust = -1) +
scale_y_continuous(expand = expand_scale(mult = c(0, 0.1))) +
labs(x = "Cylinders",
y = NULL)
View(test)
View(rural_employment_by_industry)
rural_urban_employment_by_industry_tidy <- rural_urban_employment_by_industry %>%
dplyr::select(!tidyr::one_of(tot_pop_civilian_employed_16_years_over_2019))
source("~/Desktop/code/map48-project/sample_01_urban_rural_agriculture.R", echo=TRUE)
?tidyr::pivot_longer
rural_urban_employment_by_industry_tidy <- rural_urban_employment_by_industry %>%
tidyr::pivot_longer(
cols = tidyr::starts_with("pct_"),
names_to = "industry",
values_to = "employment"
)
View(rural_urban_employment_by_industry_tidy)
View(rural_urban_employment_by_industry_tidy)
View(rural_urban_employment_by_industry_tidy)
source("~/Desktop/code/map48-project/sample_01_urban_rural_agriculture.R", echo=TRUE)
View(rural_urban_employment_by_industry)
library(dplyr)
library(ggplot2)
# Goal: compare the pct of the rural and urban population employed
# in agriculture, manufacturing, and professional services
# Read in sample data
map48_sample_data <- readr::read_csv("data/map48_sample_data.csv")
# Select the columns we want:
# tract-level geoid,
# Core-based statistical areas rural definition,
# population employed in agriculture, forestry, fishing, and hunting,
# population employed in manufacturing, and
# population employed in professional and technical services
# total civilian employed population, 16 years and over
employment_by_industry <- map48_sample_data %>%
dplyr::select(
geoid,
rural_cbsa_2020,
estimate_agriculture_2019,
estimate_manufacturing_2019,
estimate_professional_services_2019,
estimate_pop_civilian_employed_16_years_over_2019
) %>%
# Remove unclassified tracts
dplyr::filter(!is.na(rural_cbsa_2020))
# Calculate percentages for urban and rural
rural_urban_employment_by_industry <- employment_by_industry %>%
dplyr::group_by(rural_cbsa_2020) %>%
dplyr::summarise(
tot_pop_civilian_employed_16_years_over_2019 = sum(estimate_pop_civilian_employed_16_years_over_2019, na.rm = TRUE),
pct_agriculture_2019 = sum(estimate_agriculture_2019, na.rm = TRUE)/tot_pop_civilian_employed_16_years_over_2019,
pct_manufacturing_2019 = sum(estimate_manufacturing_2019, na.rm = TRUE)/tot_pop_civilian_employed_16_years_over_2019,
pct_professional_services_2019 = sum(estimate_professional_services_2019, na.rm = TRUE)/tot_pop_civilian_employed_16_years_over_2019
) %>%
dplyr::rename(
Agriculture = pct_agriculture_2019,
Manufacturing = pct_manufacturing_2019,
`Professional and technical services` = pct_professional_services_2019,
)
# Format the data to be plotted
rural_urban_employment_by_industry$rural_cbsa_2020[rural_urban_employment_by_industry$rural_cbsa_2020 == 1] <- "Rural"
rural_urban_employment_by_industry$rural_cbsa_2020[rural_urban_employment_by_industry$rural_cbsa_2020 == 0] <- "Urban"
rural_urban_employment_by_industry_tidy <- rural_urban_employment_by_industry %>%
tidyr::pivot_longer(
cols = all_of(Agriculture, Manufacturing, `Professional and technical services`),
names_to = "industry",
values_to = "pct_employment"
)
rural_urban_employment_by_industry_tidy <- rural_urban_employment_by_industry %>%
tidyr::pivot_longer(
cols = tidyr::all_of(c(Agriculture, Manufacturing, `Professional and technical services`)),
names_to = "industry",
values_to = "pct_employment"
)
rural_urban_employment_by_industry_tidy <- rural_urban_employment_by_industry %>%
tidyr::pivot_longer(
cols = tidyr::all_of(c("Agriculture", "Manufacturing", "Professional and technical services")),
names_to = "industry",
values_to = "pct_employment"
)
View(rural_urban_employment_by_industry_tidy)
rural_urban_employment_by_industry$rural_cbsa_2020[rural_urban_employment_by_industry$rural_cbsa_2020 == 1] <- "Rural"
rural_urban_employment_by_industry$rural_cbsa_2020[rural_urban_employment_by_industry$rural_cbsa_2020 == 0] <- "Urban"
rural_urban_employment_by_industry_tidy <- rural_urban_employment_by_industry %>%
tidyr::pivot_longer(
cols = tidyr::all_of(c("Agriculture", "Manufacturing", "Professional and technical services")),
names_to = "industry",
values_to = "pct_employment"
) %>%
dplyr::select(rural_cbsa_2020, industry, pct_employment)
View(rural_urban_employment_by_industry_tidy)
test <- mtcars %>%
mutate(am = factor(am, labels = c("Automatic", "Manual")),
cyl = factor(cyl)) %>%
group_by(am) %>%
count(cyl)
test %>%
ggplot(mapping = aes(cyl, y = n, fill = factor(am))) +
geom_col(position = "dodge") +
geom_text(aes(label = n), position = position_dodge(width = 0.7), vjust = -1) +
scale_y_continuous(expand = expand_scale(mult = c(0, 0.1))) +
labs(x = "Cylinders",
y = NULL)
ggplot(mapping = aes(industry, y = pct_employment, fill = factor(rural_cbsa_2020))) +
geom_col(position = "dodge") +
geom_text(aes(label = pct_employment), position = position_dodge(width = 0.7), vjust = -1) +
scale_y_continuous(expand = expand_scale(mult = c(0, 0.1))) +
labs(x = "Industry",
y = NULL)
fig <- rural_urban_employment_by_industry_tidy %>%
ggplot(mapping = aes(industry, y = pct_employment, fill = factor(rural_cbsa_2020))) +
geom_col(position = "dodge") +
geom_text(aes(label = pct_employment), position = position_dodge(width = 0.7), vjust = -1) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +
labs(x = "Industry",
y = NULL)
fig
fig <- rural_urban_employment_by_industry_tidy %>%
ggplot(mapping = aes(industry, y = pct_employment, fill = rural_cbsa_2020)) +
geom_col(position = "dodge") +
geom_text(aes(label = pct_employment), position = position_dodge(width = 0.7), vjust = -1) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +
labs(x = "Industry",
y = NULL)
fig
fig <- rural_urban_employment_by_industry_tidy %>%
ggplot(mapping = aes(industry, y = pct_employment, fill = rural_cbsa_2020)) +
geom_col(position = "dodge") +
geom_text(aes(label = pct_employment, big.mark = "%"), position = position_dodge(width = 0.7), vjust = -1) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +
labs(x = "Industry",
y = NULL)
fig
fig <- rural_urban_employment_by_industry_tidy %>%
ggplot(mapping = aes(industry, y = pct_employment, fill = rural_cbsa_2020)) +
geom_col(position = "dodge") +
geom_text(aes(label = pct_employment), position = position_dodge(width = 0.7), vjust = -1) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1)), labels = scales::percent()) +
labs(x = "Industry",
y = NULL)
fig
fig <- rural_urban_employment_by_industry_tidy %>%
ggplot(mapping = aes(industry, y = pct_employment, fill = rural_cbsa_2020)) +
geom_col(position = "dodge") +
geom_text(aes(label = pct_employment), position = position_dodge(width = 0.7), vjust = -1) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1)), labels = scales::percent) +
labs(x = "Industry",
y = NULL)
fig
fig <- rural_urban_employment_by_industry_tidy %>%
ggplot(mapping = aes(industry, y = pct_employment, fill = rural_cbsa_2020)) +
geom_col(position = "dodge") +
geom_text(aes(label = scales::percent(pct_employment)), position = position_dodge(width = 0.7), vjust = -1) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1)), labels = scales::percent) +
labs(x = "Industry",
y = NULL)
fig
library(dplyr)
library(ggplot2)
# Goal: compare the pct of the rural and urban population employed
# in agriculture, manufacturing, and professional services
# Read in sample data
map48_sample_data <- readr::read_csv("data/map48_sample_data.csv")
# Select the columns we want:
# tract-level geoid,
# Core-based statistical areas rural definition,
# population employed in agriculture, forestry, fishing, and hunting,
# population employed in manufacturing, and
# population employed in professional and technical services
# total civilian employed population, 16 years and over
employment_by_industry <- map48_sample_data %>%
dplyr::select(
geoid,
rural_cbsa_2020,
estimate_agriculture_2019,
estimate_manufacturing_2019,
estimate_professional_services_2019,
estimate_pop_civilian_employed_16_years_over_2019
) %>%
# Remove unclassified tracts
dplyr::filter(!is.na(rural_cbsa_2020))
# Calculate percentages for urban and rural
rural_urban_employment_by_industry <- employment_by_industry %>%
dplyr::group_by(rural_cbsa_2020) %>%
dplyr::summarise(
tot_pop_civilian_employed_16_years_over_2019 = sum(estimate_pop_civilian_employed_16_years_over_2019, na.rm = TRUE),
pct_agriculture_2019 = sum(estimate_agriculture_2019, na.rm = TRUE)/tot_pop_civilian_employed_16_years_over_2019,
pct_manufacturing_2019 = sum(estimate_manufacturing_2019, na.rm = TRUE)/tot_pop_civilian_employed_16_years_over_2019,
pct_professional_services_2019 = sum(estimate_professional_services_2019, na.rm = TRUE)/tot_pop_civilian_employed_16_years_over_2019
) %>%
dplyr::rename(
Agriculture = pct_agriculture_2019,
Manufacturing = pct_manufacturing_2019,
`Professional and technical services` = pct_professional_services_2019,
)
# Format the data to be plotted
rural_urban_employment_by_industry$rural_cbsa_2020[rural_urban_employment_by_industry$rural_cbsa_2020 == 1] <- "Rural"
rural_urban_employment_by_industry$rural_cbsa_2020[rural_urban_employment_by_industry$rural_cbsa_2020 == 0] <- "Urban"
rural_urban_employment_by_industry_tidy <- rural_urban_employment_by_industry %>%
tidyr::pivot_longer(
cols = tidyr::all_of(c("Agriculture", "Manufacturing", "Professional and technical services")),
names_to = "industry",
values_to = "pct_employment"
) %>%
dplyr::select(rural_cbsa_2020, industry, pct_employment)
fig <- rural_urban_employment_by_industry_tidy %>%
ggplot(mapping = aes(industry, y = pct_employment, fill = rural_cbsa_2020)) +
geom_col(position = "dodge") +
geom_text(aes(label = scales::percent(pct_employment)), position = position_dodge(width = 0.7), vjust = -1) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1)), labels = scales::percent) +
labs(x = "Industry",
y = NULL)
fig
fig <- rural_urban_employment_by_industry_tidy %>%
ggplot(mapping = aes(industry, y = pct_employment, fill = rural_cbsa_2020)) +
geom_col(position = "dodge") +
geom_text(aes(label = scales::percent(pct_employment)), position = position_dodge(width = 0.7), vjust = -1) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1)), labels = scales::percent) +
labs(x = "Industry",
y = NULL) +
coord_flip()
fig
fig <- rural_urban_employment_by_industry_tidy %>%
ggplot(mapping = aes(industry, y = pct_employment, fill = rural_cbsa_2020)) +
geom_col(position = "dodge") +
geom_text(aes(label = scales::percent(pct_employment)), position = position_dodge(width = 1), hjust = -1) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1)), labels = scales::percent) +
labs(x = "Industry",
y = NULL) +
coord_flip()
fig
fig <- rural_urban_employment_by_industry_tidy %>%
ggplot(mapping = aes(industry, y = pct_employment, fill = rural_cbsa_2020)) +
geom_col(position = "dodge") +
geom_text(aes(label = scales::percent(pct_employment)), position = position_dodge(width = 1), hjust = 0) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1)), labels = scales::percent) +
labs(x = "Industry",
y = NULL) +
coord_flip()
fig
fig <- rural_urban_employment_by_industry_tidy %>%
ggplot(mapping = aes(industry, y = pct_employment, fill = rural_cbsa_2020)) +
geom_col(position = "dodge") +
geom_text(aes(label = scales::percent(pct_employment)), position = position_dodge(width = 1), hjust = -.1) +
scale_y_continuous(expand = expansion(mult = c(0, 0.1)), labels = scales::percent) +
labs(x = "Industry",
y = NULL) +
coord_flip()
fig
fig <- rural_urban_employment_by_industry_tidy %>%
ggplot(mapping = aes(industry, y = pct_employment, fill = rural_cbsa_2020)) +
geom_col(position = "dodge") +
geom_text(aes(label = scales::percent(pct_employment)), position = position_dodge(width = 1), hjust = -.1) +
scale_y_continuous(expand = expansion(mult = c(0, 0.2)), labels = scales::percent) +
labs(x = "Industry",
y = NULL) +
coord_flip()
fig
source("~/Desktop/code/map48-project/sample_01_urban_rural_agriculture.R", echo=TRUE)
source("~/Desktop/code/map48-project/sample_01_urban_rural_agriculture.R", echo=TRUE)
library(dplyr)
library(ggplot2)
# Goal: compare the pct of the rural and urban population employed
# in agriculture, manufacturing, and professional services
# Read in sample data
map48_sample_data <- readr::read_csv("data/population_sample_data.csv")
# Select the columns we want:
#
# tract-level geoid,
# Core-based statistical areas rural definition,
# population employed in agriculture, forestry, fishing, and hunting,
# population employed in manufacturing, and
# population employed in professional and technical services
# total civilian employed population, 16 years and over
employment_by_industry <- map48_sample_data %>%
dplyr::select(
geoid,
rural_cbsa_2020,
estimate_agriculture_2019,
estimate_manufacturing_2019,
estimate_professional_services_2019,
estimate_pop_civilian_employed_16_years_over_2019
) %>%
# Remove unclassified tracts
dplyr::filter(!is.na(rural_cbsa_2020))
# Calculate percentages for urban and rural
rural_urban_employment_by_industry <- employment_by_industry %>%
dplyr::group_by(rural_cbsa_2020) %>%
dplyr::summarise(
tot_pop_civilian_employed_16_years_over_2019 = sum(estimate_pop_civilian_employed_16_years_over_2019, na.rm = TRUE),
pct_agriculture_2019 = sum(estimate_agriculture_2019, na.rm = TRUE)/tot_pop_civilian_employed_16_years_over_2019,
pct_manufacturing_2019 = sum(estimate_manufacturing_2019, na.rm = TRUE)/tot_pop_civilian_employed_16_years_over_2019,
pct_professional_services_2019 = sum(estimate_professional_services_2019, na.rm = TRUE)/tot_pop_civilian_employed_16_years_over_2019
) %>%
dplyr::rename(
`Agriculture, forestry, fishing and hunting` = pct_agriculture_2019,
Manufacturing = pct_manufacturing_2019,
`Professional and technical services` = pct_professional_services_2019,
)
# Format the data to be plot-ready
# Rename categories
rural_urban_employment_by_industry$rural_cbsa_2020[rural_urban_employment_by_industry$rural_cbsa_2020 == 1] <- "Rural"
rural_urban_employment_by_industry$rural_cbsa_2020[rural_urban_employment_by_industry$rural_cbsa_2020 == 0] <- "Urban"
# Modify into tidy format
rural_urban_employment_by_industry_tidy <- rural_urban_employment_by_industry %>%
tidyr::pivot_longer(
cols = tidyr::all_of(c("Agriculture, forestry, fishing and hunting", "Manufacturing", "Professional and technical services")),
names_to = "industry",
values_to = "pct_employment"
) %>%
dplyr::select(rural_cbsa_2020, industry, pct_employment)
# Plot with default ggplot styling
fig <- rural_urban_employment_by_industry_tidy %>%
ggplot(mapping = aes(industry, y = pct_employment, fill = rural_cbsa_2020)) +
geom_col(position = "dodge") +
geom_text(aes(label = scales::percent(pct_employment)), position = position_dodge(width = 1), hjust = -.1) +
scale_y_continuous(expand = expansion(mult = c(0, 0.2)), labels = scales::percent) +
labs(x = "Industry",
y = NULL) +
coord_flip()
fig
library(dplyr)
library(ggplot2)
# Goal: compare how the percent of population working from home has changed
# over time by education level
# Read in sample data
map48_sample_data <- readr::read_csv("data/time_series_sample_data.csv")
View(map48_sample_data)
View(map48_sample_data)
library(gapminder)
test <- gapminder %>%
filter(country %in% c("Australia", "Canada", "New Zealand")) %>%
mutate(country = factor(country, levels = c("Canada", "Australia", "New Zealand")))
test %>%
ggplot(aes(year, gdpPercap, color = country)) +
geom_line() +
scale_x_continuous(expand = expand_scale(mult = c(0.002, 0)),
breaks = c(1952 + 0:12 * 5),
limits = c(1952, 2007)) +
scale_y_continuous(expand = expand_scale(mult = c(0, 0.002)),
breaks = 0:8 * 5000,
labels = scales::dollar,
limits = c(0, 40000)) +
labs(x = "Year",
y = "Per capita GDP (US dollars)")
View(test)
View(map48_sample_data)
library(dplyr)
library(ggplot2)
# Goal: compare the pct of the rural and urban population employed
# in agriculture, manufacturing, and professional services
# Read in sample data
map48_sample_data <- readr::read_csv("data/population_sample_data.csv")
# Format for chart consumption
remote_work_by_ed_level <- map48_sample_data %>%
tidyr::pivot_longer(
cols = !date,
names_to = "education_level",
values_to = "pct_working_remotely"
)
library(dplyr)
library(ggplot2)
# Goal: compare how the percent of population working from home has changed
# over time by education level
# Read in sample data
map48_sample_data <- readr::read_csv("data/time_series_sample_data.csv")
# Format for chart consumption
remote_work_by_ed_level <- map48_sample_data %>%
tidyr::pivot_longer(
cols = !date,
names_to = "education_level",
values_to = "pct_working_remotely"
)
View(remote_work_by_ed_level)
library(gapminder)
test <- gapminder %>%
filter(country %in% c("Australia", "Canada", "New Zealand")) %>%
mutate(country = factor(country, levels = c("Canada", "Australia", "New Zealand")))
View(test)
library(dplyr)
library(ggplot2)
# Goal: compare how the percent of population working from home has changed
# over time by education level
# Read in sample data
map48_sample_data <- readr::read_csv("data/time_series_sample_data.csv")
# Format for chart consumption
remote_work_by_ed_level <- map48_sample_data %>%
tidyr::pivot_longer(
cols = !date,
names_to = "education_level",
values_to = "pct_working_remotely"
)
fig <- remote_work_by_ed_level %>%
ggplot(aes(date, pct_working_remotely, color = education_level)) +
geom_line() +
scale_x_continuous(expand = expand_scale(mult = c(0.002, 0))) +
scale_y_continuous(expand = expand_scale(mult = c(0, 0.002))) +
labs(x = "Date",
y = "Per capita GDP (US dollars)")
fig
library(dplyr)
library(ggplot2)
# Goal: compare how the percent of population working from home has changed
# over time by education level
# Read in sample data
map48_sample_data <- readr::read_csv("data/time_series_sample_data.csv", col_types = list(col_datetime(format = "%m/%d/%y")))
library(dplyr)
library(ggplot2)
# Goal: compare how the percent of population working from home has changed
# over time by education level
# Read in sample data
map48_sample_data <- readr::read_csv("data/time_series_sample_data.csv", col_types = list(tidyr::col_date(format = "%m/%d/%y")))
library(dplyr)
library(ggplot2)
# Goal: compare how the percent of population working from home has changed
# over time by education level
# Read in sample data
map48_sample_data <- readr::read_csv("data/time_series_sample_data.csv", col_types = list(readr::col_date(format = "%m/%d/%y")))
View(map48_sample_data)
# Format for chart consumption
remote_work_by_ed_level <- map48_sample_data %>%
tidyr::pivot_longer(
cols = !date,
names_to = "education_level",
values_to = "pct_working_remotely"
)
fig <- remote_work_by_ed_level %>%
ggplot(aes(date, pct_working_remotely, color = education_level)) +
geom_line() +
scale_x_continuous(expand = expand_scale(mult = c(0.002, 0))) +
scale_y_continuous(expand = expand_scale(mult = c(0, 0.002))) +
labs(x = "Date",
y = "Per capita GDP (US dollars)")
fig
fig <- remote_work_by_ed_level %>%
ggplot(aes(date, pct_working_remotely, color = education_level)) +
geom_line() +
labs(x = "Date",
y = "Per capita GDP (US dollars)")
fig
fig <- remote_work_by_ed_level %>%
ggplot(aes(date, pct_working_remotely, color = education_level)) +
geom_line() +
xlab("")
fig
fig <- remote_work_by_ed_level %>%
ggplot(aes(date, pct_working_remotely, group = education_level, color = education_level)) +
geom_line() +
xlab("")
fig
library(dplyr)
library(ggplot2)
# Goal: compare how the percent of population working from home has changed
# over time by education level
# Read in sample data
map48_sample_data <- readr::read_csv("data/time_series_sample_data.csv", col_types = list(readr::col_date(format = "%m/%d/%y")))
# Format for chart consumption
remote_work_by_ed_level <- map48_sample_data %>%
tidyr::pivot_longer(
cols = !date,
names_to = "education_level",
values_to = "pct_working_remotely"
)
fig <- remote_work_by_ed_level %>%
ggplot(aes(date, pct_working_remotely, group = education_level, color = education_level)) +
geom_line() +
xlab("")
fig
